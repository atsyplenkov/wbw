% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter.R
\name{wbw_mean_filter}
\alias{wbw_mean_filter}
\title{Mean filter}
\usage{
wbw_mean_filter(x, filter_size_x = 11L, filter_size_y = 11L)
}
\arguments{
\item{x}{Raster object of class \link{WhiteboxRaster}. See \code{\link[=wbw_read_raster]{wbw_read_raster()}} for more details.}

\item{filter_size_x}{\code{integer}, X dimension of the neighbourhood size}

\item{filter_size_y}{\code{integer}, Y dimension of the neighbourhood size}
}
\value{
\link{WhiteboxRaster} object containing filtered values
}
\description{
This tool performs a mean filter operation on a raster image. A mean filter,
a type of low-pass filter, can be used to emphasize the longer-range
variability in an image, effectively acting to smooth the image.
This can be useful for reducing the noise in an image.
}
\details{
This tool utilizes an integral image approach (Crow, 1984) to ensure highly
efficient filtering that is invariant to filter size. The algorithm
operates by calculating the average value in a moving window centred on
each grid cell.

Neighbourhood size, or filter size, is specified in the x and y dimensions
using \code{filter_size_x} and \code{filter_size_y} These dimensions should be odd,
positive integer values (e.g. 3L, 5L, 7L, 9L, etc.).

Although commonly applied in digital image processing, mean filters are
generally considered to be quite harsh, with respect to their impact on the
image, compared to other smoothing filters such as the edge-preserving
smoothing filters including the \link{wbw_bilateral_filter},
\code{median_filter}, \code{olympic_filter}, \code{edge_preserving_mean_filter} and even
\code{gaussian_filter}.
}
\examples{
\dontrun{
raster_path <- system.file("extdata/dem.tif", package = "wbw")
wbw_read_raster(raster_path) |>
  wbw_mean_filter(filter_size_x = 3L, filter_size_y = 3L)
}
}
\references{
For more information, see \url{https://www.whiteboxgeo.com/manual/wbw-user-manual/book/tool_help.html#mean_filter}
}
\seealso{
\code{\link[=wbw_bilateral_filter]{wbw_bilateral_filter()}}
}
\keyword{image_processing}
