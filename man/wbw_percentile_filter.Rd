% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filters.R
\name{wbw_percentile_filter}
\alias{wbw_percentile_filter}
\title{Percentile Filter}
\usage{
wbw_percentile_filter(
  x,
  filter_size_x = 11L,
  filter_size_y = 11L,
  sig_digits = 2L
)
}
\arguments{
\item{x}{Raster object of class \link{WhiteboxRaster}. See \code{\link[=wbw_read_raster]{wbw_read_raster()}} for more details.}

\item{filter_size_x}{\code{integer}, X dimension of the neighbourhood size}

\item{filter_size_y}{\code{integer}, Y dimension of the neighbourhood size}

\item{sig_digits}{\code{integer}, default 2. Required for rounding of
floating points inputs.}
}
\value{
\link{WhiteboxRaster} object containing filtered values
}
\description{
This tool calculates the percentile of the center cell in a moving filter
window applied to an input image (\code{x}). This indicates the value
below which a given percentage of the neighbouring values in within the
filter fall. For example, the 35th percentile is the value below which 35\%
of the neighbouring values in the filter window may be found. As such,
the percentile of a pixel value is indicative of the relative location
of the site within the statistical distribution of values contained
within a filter window.

When applied to input digital elevation models, percentile is a measure of
local topographic position, or elevation residual.
}
\details{
Neighbourhood size, or filter size, is specified in the x and y dimensions
using \code{filter_size_x} and \code{filter_size_y} These dimensions should
be odd, positive integer values (e.g. 3L, 5L, 7L, 9L, etc.).

This tool takes advantage of the redundancy between overlapping,
neighbouring filters to enhance computationally efficiency, using a
method similar to Huang et al. (1979). This efficient method of
calculating percentiles requires rounding of floating-point inputs,
and therefore the user must specify the number of significant
digits (\code{sig_digits}) to be used during the processing.
}
\examples{
f <- system.file("extdata/dem.tif", package = "wbw")
wbw_read_raster(f) |>
  wbw_percentile_filter(filter_size_x = 3L, filter_size_y = 3L)
}
\references{
Huang, T., Yang, G.J.T.G.Y. and Tang, G., 1979. A fast two-dimensional
median filtering algorithm. IEEE Transactions on Acoustics, Speech, and
Signal Processing, 27(1), pp.13-18.

For more information, see \url{https://www.whiteboxgeo.com/manual/wbw-user-manual/book/tool_help.html#percentile_filter}
}
\seealso{
\code{\link[=wbw_median_filter]{wbw_median_filter()}}
}
\keyword{image_processing}
